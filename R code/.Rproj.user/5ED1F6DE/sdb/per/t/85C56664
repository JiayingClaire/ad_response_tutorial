{
    "collab_server" : "",
    "contents" : "# ===== Ad Respons Workshop =====\n# Synthetic Data Generation\n\n# Elea McDonnell Feit\n# efeit@wharton.upenn.edu\n\n# features that would be nice-to-have\n# clumpiness/attrition in impressions and transactions\n# effect of marketing on transaction amount\n\nrm(list=ls())\nsetwd(\"~/Google Drive/_Practitioner Presentations/2017 Ad response tutorial/R code\")\nset.seed(\"20030601\")\n\n# Customer data\nncust <- 10000\nid = 1:ncust\npast.purchase <- rbinom(ncust, size=1, prob=0.5)\nemail = rbinom(ncust, size=1, prob=0.3 + past.purchase*0.6) # has email on file\ndirect = rbinom(ncust, size=1, prob=0.2 + past.purchase*0.6) # had address on file\ncust <- data.frame(id, past.purchase, email, direct)\nsummary(cust)\nwrite.csv(cust, file=\"customer.csv\", row.names=FALSE)\n\n# Ad Exposure Data (\"Impressions\")\nrimpressions <- function(id, channel, daily.rate, click.rate, start, end) {\n  start <- as.POSIXct(start)\n  end <- as.POSIXct(end)\n  diff.sec <- as.numeric(difftime(end, start, unit=\"sec\"))\n  diff.day <- as.numeric(difftime(end, start, unit=\"day\"))\n  ndate <- rpois(1, lambda = daily.rate*diff.day) \n  ev <- sort(runif(ndate, 0, diff.sec))\n  rt <- start + ev\n  rt <- strftime(rt, format=\"%Y-%m-%d\", usetz=FALSE)\n  click <- rbinom(ndate, size=1, prob=click.rate)\n  data.frame(id=rep(id, ndate), date=as.Date(rt), channel=rep(channel, ndate),  \n             click=click, stringsAsFactors=FALSE)\n}\ncimpressions <- function(id, channel, cadence, click.rate) {\n  cadence <- as.Date(cadence)\n  ndate <- length(cadence)\n  click <- rbinom(ndate, size=1, prob=click.rate)\n  data.frame(id=rep(id, ndate), date=cadence, channel=rep(channel, ndate), \n             click=click, stringsAsFactors=FALSE)\n}\nimpressions <- NULL\nemail.cadence <- c(\"2017/01/03\", \"2017/01/10\", \"2017/01/17\", \"2017/01/24\", \n                   \"2017/01/31\", \"2017/02/07\", \"2017/02/14\", \"2017/02/21\")\ndirect.cadence <- c(\"2017/01/06\", \"2017/02/03\")\nstartdate <- as.Date(\"2017/01/01\")\nenddate <- as.Date(\"2017/02/28\")\nfor (i in cust$id) {\n  # email (treatment/control)\n  if (cust$email[i]==1) {\n    temp <- cimpressions(i, \"email\", email.cadence, click.rate=0.1)\n    holdouts <- as.logical(rbinom(n=nrow(temp), size=1, p=0.20))\n    temp[holdouts, \"channel\"] <- \"email.holdout\"\n    temp[holdouts,\"click\"] <- 0\n    impressions <- rbind(impressions, temp)\n  }\n  # directmail\n  if (cust$direct[i]==1) {\n    impressions <- rbind(impressions, \n                         cimpressions(i, \"direct\", direct.cadence, click.rate=0))\n  }\n  # social\n  if (runif(1)<0.5) {\n    social.rate <- exp(rnorm(1, mean=0.3, sd=0.5)) + cust$email[1]*2\n    impressions <- rbind(impressions, \n                         rimpressions(id=i, channel=\"social\", daily.rate=social.rate, click.rate=0.02, start=startdate, end=startdate+30))\n  }\n  # display\n  if (runif(1)<0.3) {\n    display.rate <- exp(rnorm(1, mean=0.1, sd=0.5)) + cust$email[1]*1\n    impressions <- rbind(impressions, \n                         rimpressions(id=i, channel=\"display\", daily.rate=display.rate, click.rate=0.005, start=startdate, end=enddate))\n  }\n}\nsummary(impressions)\nxtabs(click~channel, data=impressions)/xtabs(~channel, data=impressions)\nwrite.csv(impressions, file=\"impressions.csv\", row.names=FALSE)\n\n# Purchase Data (\"Conversions\")\n# build up transaction rate vector by day\nobs <- seq.Date(from=as.Date(startdate), to=as.Date(enddate), by=\"day\")\ntransactions <- NULL\nfor (i in cust$id) {\n  # Baseline conversion rate\n  conv.rate <- rep(0.25/30 + 0.75/30*cust$past.purchase[i], length(obs))\n  impr.all <- impressions[impressions$id==i,]\n  impr <- impr.all[impr.all$channel==\"display\", ]\n  if (nrow(impr)>0) {\n    conv.rate[obs %in% impr$date] <- 0.01 + conv.rate[obs %in% impr$date]\n  }\n  impr <- impr.all[impr.all$channel==\"social\", ]\n  if (nrow(impr)>0) {\n    conv.rate[obs %in% impr$date] <- 0.02 +  conv.rate[obs %in% impr$date]\n    conv.rate[obs %in% (impr$date+1)] <- 0.01 +  conv.rate[obs %in% (impr$date+1)]\n  }\n  impr<- impr.all[impr.all$channel==\"email\",]\n  if (nrow(impr)>0) {\n    conv.rate[obs %in% impr$date] <- 0.05 + conv.rate[obs %in% impr$date]\n    conv.rate[obs %in% (impr$date+1)] <- 0.03 + conv.rate[obs %in% (impr$date+1)]\n    conv.rate[obs %in% (impr$date+2)] <- 0.01 + conv.rate[obs %in% (impr$date+2)]\n  }\n  impr <- impr.all[impr.all$channel==\"direct\",]\n  if (nrow(impr)>0) {\n    conv.rate[obs %in% impr$date] <- 0.03 + conv.rate[obs %in% impr$date]\n    conv.rate[obs %in% (impr$date+1)] <- 0.05 + conv.rate[obs %in% (impr$date+1)]\n    conv.rate[obs %in% (impr$date+2)] <- 0.05 + conv.rate[obs %in% (impr$date+2)]\n    conv.rate[obs %in% (impr$date+3)] <- 0.05 + conv.rate[obs %in% (impr$date+3)]\n    conv.rate[obs %in% (impr$date+4)] <- 0.03 + conv.rate[obs %in% (impr$date+4)]\n    conv.rate[obs %in% (impr$date+5)] <- 0.02 + conv.rate[obs %in% (impr$date+5)]\n    conv.rate[obs %in% (impr$date+6)] <- 0.01 + conv.rate[obs %in% (impr$date+6)]\n  }\n  trans <- rbinom(length(obs), size=1, prob=conv.rate)\n  if (sum(trans)>0) { \n    trans.date <- obs[as.logical(trans)]\n    transactions <- rbind(transactions, \n                          data.frame(id=rep(i, length(trans.date)), date=trans.date))\n  }\n}\nhist(xtabs(~id, data=transactions))\n\n# Append last-click and last touch data to transactions\nappend.last <- function(trans, impress) {\n  out <- data.frame(trans, last.touch=NA, last.click=NA)\n  for (t in 1:nrow(out)) {\n    impr <- impress[impress$id==out$id[t] & impress$date<=out$date[t] & impress$channel!=\"email.holdout\", ]\n    if (nrow(impr)>0) {\n      out$last.touch[t] <- as.character(sample(impr$channel[impr$date==max(impr$date)], 1)) # choose randomly\n    }\n    impr <- impr[impr$click==1,]\n    if (nrow(impr)>0){\n      out$last.click[t] <- as.character(sample(impr$channel[impr$date==max(impr$date)], 1))\n    }\n  }\n  out[is.na(out)] <- \"none\"\n  out\n}\ntrans <- append.last(transactions, impressions)\n\nwrite.csv(transactions, file=\"transactions.csv\", row.names=FALSE)\n",
    "created" : 1493731171662.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1724816865",
    "id" : "85C56664",
    "lastKnownWriteTime" : 1493725211,
    "last_content_update" : 1493725211,
    "path" : "~/Google Drive/_Workshops/2017 Ad response tutorial/R code/AdResponseDataGeneration.R",
    "project_path" : "AdResponseDataGeneration.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}