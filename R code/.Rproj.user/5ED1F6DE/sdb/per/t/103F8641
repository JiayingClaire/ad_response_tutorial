{
    "collab_server" : "",
    "contents" : "# ===== Is My Advertising Working?=====\n# Elea McDonnell Feit\n# efeit@wharton.upenn.edu\n# Last updated May 2017, Version 0.1\n\n# This file is a companion to the workshop on \"Is my advertising working?\" \n# first offered in conjunction with the Wharton Customer Analytics Initiative\n# annual conference. \n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n#\n# You may obtain a copy of the License at\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nrm(list=ls()) # clears the workspace\nset.seed(\"20030603\") #ensures repeatable results for attribution rules\nsetwd(\"~/Google Drive/_Workshops/2017 Ad response tutorial/R code\") # set your working directory\n#library(data.table) # support for large data \nlibrary(coefplot) # plotting model coefficients\noptions(scipen=999) # supress scientific notation\n\n# ====== Read in data and explore ========\n# == Customer table ==\ncust <- read.csv(\"https://goo.gl/mqy8NR\")\nnrow(cust)\nsummary(cust)\nxtabs(~email+direct+past.purchase, data=cust)\n\n# == Impressions table ==\nimpress <- read.csv(\"https://goo.gl/74qIxy\")\nimpress$date <- as.Date(impress$date) # change type\nnrow(impress)\nsummary(impress)\n\n# Cadence\n(cadence <- xtabs(~date+channel, data=impress))\n\n# Visualize the cadence\ncadence <- cadence[,c(2,5,1,3,4)] # reorder the columns\nmycols <- c(\"gray50\", \"wheat2\", \"darkorange2\", \"steelblue2\", \"steelblue4\")\nbarplot(t(cadence), col=mycols, ylab=\"impressions\") \nlegend(\"topright\", legend=colnames(cadence), fill=mycols, cex=0.6)\n\n# Impressions per person\nhist(xtabs(~id, data=impress), xlab=\"Impressions\", ylab=\"Count of Users\",\n     main=\"Histogram of Impressions per User\")\n\n# Click through rates by channel\nxtabs(click~channel, data=impress)/xtabs(~channel, data=impress) \n\n# ==Transactions table==\ntrans <- read.csv(\"https://goo.gl/lIAuZu\")\ntrans$date <- as.Date(trans$date)\nsummary(trans)\n\n# Transactions over time\n(transbyday <- xtabs(~date, data=trans))\n\n# Plot of transactions over time\nplot(transbyday, ylab=\"Transactions\", xlab=\"Date\")\n\n# Transactions per person\nhist(xtabs(~id, data=trans), xlab=\"Number of Transactions\", ylab=\"Count of Users\", \n     main=\"Histogram of Transactions\")\n\n# Timeline for one customer\ncust[cust$id==100,]\nimpress[impress$id==100,]\ntrans[trans$id==100,]\n\ncust[cust$id==300,]\nsummary(impress[impress$id==300,])\ntrans[trans$id==300,]\n\n# ====== Last-Click Attribution =======\n(last.touch.att <- xtabs(~last.touch, data=trans))\nbarplot(last.touch.att, ylab=\"Transactions\", \n        main=\"Last Touch Attribution\")\n\n# For the month of February\nxtabs(~last.touch, data=trans[trans$date>as.Date(\"2017-01-31\"),])\n\n(last.click.att <- xtabs(~last.click, data=trans))\nbarplot(last.click.att, ylab=\"Transactions\", \n        main=\"Last Click Attribution\")\n\nrm(last.click.att, last.touch.att)\n\n# ======= Email Holout Test =======\n# Function for pulling relavent test summaries out of the data\nholdout.test <- function(test.date, delay=0, window, impress, trans) {\n  test.ids <- unique(impress$id[impress$channel==\"email\" & impress$date==test.date])\n  control.ids <- unique(impress$id[impress$channel==\"email.holdout\" & impress$date==test.date])\n  tdata <- data.frame(ids=c(test.ids, control.ids))\n  tdata$group[tdata$id %in% test.ids] <- \"test\"\n  tdata$group[tdata$id %in% control.ids] <- \"control\"\n  in.window <- trans$date>=(test.date+delay) & trans$date<(test.date+window+delay)\n  tdata$convert <- tdata$id %in% trans$id[in.window]\n  ttable <- xtabs(~ group + convert, data=tdata)\n  mosaicplot(~ group + convert, data=tdata, \n             main=paste(\"Email Test on\", test.date))\n  proptest <- prop.test(x=ttable[,\"TRUE\"], n=xtabs(~group, data=tdata))\n  diff.conv <- c(diff=proptest$estimate[2]-proptest$estimate[1], ci=-proptest$conf.int)\n  out <- list(diff.conv, ttable, proptest)\n}\n\n# Different ways to analyse the \"2017-01-03\" test\n# Window for conversions starts at test.date+delay and ends and test.date+delay+window\n(holdout.test(test.date=as.Date(\"2017-01-03\"), window=7, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-01-03\"), window=3, impress=impress, trans=trans))\n\n# Look at the response by day\nday1 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=0, window=1, impress=impress, trans=trans)\nday2 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=1, window=1, impress=impress, trans=trans)\nday3 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=2, window=1, impress=impress, trans=trans)\nday4 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=3, window=1, impress=impress, trans=trans)\nday5 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=4, window=1, impress=impress, trans=trans)\nday6 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=5, window=1, impress=impress, trans=trans)\nday7 <- holdout.test(test.date=as.Date(\"2017-01-03\"), delay=6, window=1, impress=impress, trans=trans)\nincr.conv <- c(day1[[1]][1], day2[[1]][1], day3[[1]][1], day4[[1]][1], day5[[1]][1], \n               day6[[1]][1], day7[[1]][1])\nplot(incr.conv, type=\"h\", main=\"Email Test 2017-01-03\", \n     xlab=\"Days after Email Sent\", ylab=\"Increase in Conversion Rate\")\nabline(h=0, col=\"gray\")\n\n# Other email tests (not in slides)\n(holdout.test(test.date=as.Date(\"2017-01-10\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-01-17\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-01-24\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-01-31\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-02-07\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-02-14\"), window=3, impress=impress, trans=trans))\n(holdout.test(test.date=as.Date(\"2017-02-21\"), window=3, impress=impress, trans=trans))\n\n# ====== Marketing Mix Modeling ======\n# Data prep: summarize impressions and transactions at the daily level\n(transbyday <- xtabs(~date, data=trans))\n(cadence <- xtabs(~date+channel, data=impress))\nmdata <- as.data.frame(cbind(trans=transbyday[1:57], cadence[2:58,])) # aligining dates\nhead(mdata)\nsummary(mdata)\n\n# Data exploration\nplot(x=mdata$direct, y=mdata$trans, xlab=\"Direct Impressions\", \n     ylab=\"Transactions\", main=\"Direct Impressions v. Transactions\")\nplot(x=mdata$email, y=mdata$trans, xlab=\"Email Impressions\", \n     ylab=\"Transactions\", main=\"Email Impressions v. Transactions\")\nplot(x=mdata$display, y=mdata$trans, xlab=\"Display Impressions\", \n     ylab=\"Transactions\", main=\"Display Impressions v. Transactions\")\nplot(x=mdata$social, y=mdata$trans, xlab=\"Social Impressions\", \n     ylab=\"Transactions\", main=\"Social Impressions v. Transactions\")\n\n# Modeling\n# Basic regression relating transactions to impressions\nm1 <- lm(trans~direct+social+email+display+social+email.holdout, data=mdata)\nsummary(m1)\n\n# Add in a day of week variable\nmdata$dayofweek <- weekdays(as.Date(rownames(mdata)))\nm2 <- lm(trans~email+direct+display+social+dayofweek, data=mdata)\nsummary(m2)\n\n# Create and ad stock variable to account for the decay of advertising\nmdata$email.stock <- as.numeric(filter(x=mdata$email, filter=0.5, method=\"recursive\"))\nmdata$display.stock <- as.numeric(filter(x=mdata$display, filter=0.3, method=\"recursive\"))\nmdata$direct.stock <- as.numeric(filter(x=mdata$direct, filter=0.75, method=\"recursive\"))\nmdata$social.stock <- as.numeric(filter(x=mdata$social, filter=0.3, method=\"recursive\"))\n\nhead(mdata)\n\n# Plot the ad stocks over time\nplot(mdata$email.stock, type=\"l\", xlab=\"Day\", ylab=\"Email Ad Stock\")\nplot(mdata$display.stock, type=\"l\", xlab=\"Day\", ylab=\"Display Ad Stock\")\nplot(mdata$direct.stock, type=\"l\", xlab=\"Days\", ylab=\"Direct Stock\")\nplot(mdata$social.stock, type=\"l\", xlab=\"Days\", ylab=\"Social Stock\")\n\n# Plot the ad stocks agains the transactions\nplot(mdata$email.stock, mdata$trans, xlab=\"Email Stock\", ylab=\"Transactions\")\nplot(mdata$display.stock, mdata$trans, xlab=\"Display Stock\", ylab=\"Transactions\")\nplot(mdata$direct.stock, mdata$trans, xlab=\"Direct Stock\", ylab=\"Transactions\")\nplot(mdata$social.stock, mdata$trans, xlab=\"Social Stock\", ylab=\"Transactions\")\n\nm3 <- lm(trans~email.stock+display.stock+direct.stock+social.stock, \n         data=mdata[5:nrow(mdata),]) # Remove first few observations to allow for \"warmup\" of stock\nsummary(m3)\n\n# Interactions\nm4 <- lm(trans~email.stock+display.stock+direct.stock+social.stock+email.stock*direct.stock, \n         data=mdata[5:nrow(mdata),]) # Remove first few observations to allow for \"warmup\" of stock\nsummary(m4)\n\n# ======= Model-Based Attribution =======\n# DATA PREP\n# Summarize impressions at the day-user level\nadatal <- as.data.frame(xtabs(~ id + date + channel, data=impress), stringsAsFactors=FALSE)\nadatal$id <- as.integer(adatal$id)\nadatal$date <- as.Date(adatal$date)\nadatal$channel <- as.factor(adatal$channel)\ndimnames(adatal)[[2]][4] <- \"impr\"\nhead(adatal)\nstr(adatal)\nsummary(adatal)\n# Add in observations for users with no impressions. (They count, too!)\npop <- unique(cust$id)\nno.impress.ids <- pop[!(pop %in% unique(impress$id))]\ndates <- sort(unique(impress$date))\nchannels <- unique(impress$channel)\nno.impress.obs <- data.frame(id=rep(no.impress.ids, each=length(dates)*length(channels)), \n                             date=rep(rep(dates, each=length(channels)), length(no.impress.ids)), \n                             channel=rep(channels, length(no.impress.ids)*length(dates)),\n                             impr=rep(0, length(dates)*length(no.impress.ids)*length(channels)), \n                             stringsAsFactors=FALSE)\nno.impress.obs$channel <- as.factor(no.impress.obs$channel)\nsummary(no.impress.obs)\nadatal <- rbind(adatal, no.impress.obs)\nsummary(adatal)                    \nsummary(adatal[adatal$id==1,])\n# Convert from long to wide format\nadata <- reshape(adatal, direction=\"wide\", v.names=\"impr\", idvar=c(\"id\", \"date\"), \n                timevar=\"channel\", new.row.names=NULL)\nsum(adata$impr.direct) == length(impress$channel[impress$channel==\"direct\"]) #quick check\nnrow(adata)\nhead(adata)\nsummary(adata)\nsummary(adata[adata$date==\"2017-01-03\",])\n# Add transactions\natrans <- as.data.frame(xtabs(~ id + date, data=trans), stringsAsFactors=FALSE)\natrans$id <- as.integer(atrans$id)\natrans$date <- as.Date(atrans$date)\ndimnames(atrans)[[2]][3] <- \"trans\"\nstr(atrans)\nadata <- merge(adata, atrans, by=c(\"id\", \"date\"), all=TRUE)\nadata$trans[is.na(adata$trans)] <- 0 # Fill in zeros for transactions\nhead(adata)\n\n# Remove first and last days (which are incomplete)\nadata <- adata[adata$date!=\"2016-12-31\" & adata$date != \"2017-02-28\" & adata$date != \"2017-02-27\",]\n# Add customer info from cust table\nadata <- merge(adata, cust, by=c(\"id\"))\n# Tidy up column names\ndimnames(adata)[[2]][3:11] <- c(\"direct\", \"display\", \"email\", \"email.holdout\", \"social\", \"trans\", \"past.purchase\", \"has.email\", \"has.direct\")\nrm(adatal, atrans)\n\n# DATA EXPLORATION\nsummary(adata)\n\n# Single day\nsummary(adata[adata$date==\"2017-01-03\",])\n\nplot(aggregate(trans~direct, data=adata, FUN=mean), type=\"h\", ylim=c(0,0.15),\n     xlab=\"Impressions on Day\", ylab=\"Same-Day Conversion Rate\", main=\"Direct\")\nplot(aggregate(trans~email, data=adata, FUN=mean), type=\"h\", ylim=c(0,0.15),\n     xlab=\"Impressions on Day\", ylab=\"Same-Day Conversion Rate\", main=\"Email\")\nplot(aggregate(trans~display, data=adata, FUN=mean), type=\"h\", ylim=c(0,0.15),\n     xlab=\"Impressions on Day\", ylab=\"Same-Day Conversion Rate\", main=\"Display\")\nplot(aggregate(trans~social, data=adata, FUN=mean), type=\"h\", ylim=c(0,0.15),\n     xlab=\"Impressions on Day\", ylab=\"Same-Day Conversion Rate\", main=\"Social\")\n\n# MODELING\nm1 <- lm(trans ~ direct + display + email + social, data=adata)\nsummary(m1)\n\nm2 <- lm(trans ~ direct + display + email + social + past.purchase, data=adata)\nsummary(m2)\n\n# It is more appropriate to use a logistic regression for 0-1 response\nm3 <- glm(trans ~ direct + display + email + social + past.purchase, \n          family=binomial(), data=adata)\nsummary(m3)\n\n",
    "created" : 1493729585950.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "159345395",
    "id" : "103F8641",
    "lastKnownWriteTime" : 1493907478,
    "last_content_update" : 1493907478407,
    "path" : "~/Google Drive/_Workshops/2017 Ad response tutorial/R code/AdResponseTutorial.R",
    "project_path" : "AdResponseTutorial.R",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}